# MLOPS cicd pipeline

name: Iris MLOps CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-train-register:
    name: Ingest, Train, Register, and Build Docker Image
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create Data Directory
      run: mkdir -p data model

    - name: Run Data Ingestion
      run: python src/ingest_data.py

    - name: Train and Tune Model
      run: python src/train_model.py

    - name: Register Model
      run: python src/register_model.py

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/iris-ml-api:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/iris-ml-api:latest

  deploy:
    name: Deploy to Kubernetes
    needs: build-train-register
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::123456789012:role/github-actions-eks-role
        role-session-name: github-actions-session
        aws-region: ap-south-1

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Verify AWS Authentication
      run: aws sts get-caller-identity

    - name: Update Kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region ap-south-1 --name ${{ secrets.EKS_CLUSTER_NAME }}
        kubectl config current-context

    - name: Debug kubectl config
      run: |
        echo "Current context:"
        kubectl config current-context
        echo "Cluster info:"
        kubectl cluster-info
        echo "Config view:"
        kubectl config view --minify

    - name: Test connection
      run: kubectl get nodes

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yml --validate=false
        kubectl apply -f k8s/service.yml   --validate=false
